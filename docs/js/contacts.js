var cont=new Vue({el:"#cont",data:{counter:0,textareaVal:"",options:[],selected:"",imgs:[],other:!1,email:"",photoInvalid:!1,errors:{enquiry_type:!1,user_name:!1,email:!1,subject:!1,description:!1,other:!1}},created:function(){var r=this;fetch("http://504080.com/api/v1/directories/enquiry-types",{method:"get"}).then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){for(var t=0;t<e.data.length;t++)r.options.push(e.data[t].name)})},watch:{selected:function(){"Other"==this.selected?this.other=!0:this.other=!1},textareaVal:function(e){this.counter=e.length}},methods:{addPhoto:function(){var r=document.querySelectorAll("input[type=file]")[cont.imgs.length].files[0],o=document.querySelectorAll("input[type=file]")[cont.imgs.length],n=document.querySelector("#c_form_hiddenAdd"),i=document.querySelector(".c_form_text_cont"),s=new Image;s.src=window.URL.createObjectURL(r),/image\//gi.test(r.type)?s.onload=function(){var e=s.naturalWidth,t=s.naturalHeight;r.size<5242880&&300<=e&&300<=t?(cont.imgs.push(s.src),o.setAttribute("readonly",""),o.style.width="0",o.style.height="0",n.style.marginRight="0px",i.style.marginTop="-170px",cont.photoInvalid=!1):(cont.photoInvalid=!0,o.removeAttribute("readonly"))}:cont.photoInvalid=!0},onClose:function(e){var t=this.imgs.indexOf(e.target.id),r=document.querySelectorAll("input[type=file]")[cont.imgs.length-1],o=document.querySelector(".c_form_text_cont"),n=document.querySelector("#c_form_hiddenAdd");this.imgs.splice(t,1),r.style.width="130px",r.style.height="170px",""==this.imgs&&(o.style.marginTop="0px",n.style.marginRight="-130px",n.style.height="170px")},onSubmit:function(t){var e=document.querySelectorAll("[data-check=required]"),r=document.querySelector("input[name=email]"),o=document.querySelector("input[name=other]");e.forEach(function(e){e.value?(e.classList.remove("c_form_error_border"),cont.errors[e.name]=!1):(e.classList.add("c_form_error_border"),cont.errors[e.name]=!0,t.preventDefault())}),/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.email)?(r.classList.remove("c_form_error_border"),this.errors.email=!1):(r.classList.add("c_form_error_border"),this.errors.email=!0,t.preventDefault()),this.other&&!o.value?(o.classList.add("c_form_error_border"),this.errors.other=!0,t.preventDefault()):(this.other&&o.value&&o.classList.remove("c_form_error_border"),this.errors.other=!1)}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RzLmpzIl0sIm5hbWVzIjpbImNvbnQiLCJWdWUiLCJlbCIsImRhdGEiLCJjb3VudGVyIiwidGV4dGFyZWFWYWwiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJpbWdzIiwib3RoZXIiLCJlbWFpbCIsInBob3RvSW52YWxpZCIsImVycm9ycyIsImVucXVpcnlfdHlwZSIsInVzZXJfbmFtZSIsInN1YmplY3QiLCJkZXNjcmlwdGlvbiIsImNyZWF0ZWQiLCJfdGhpcyIsInRoaXMiLCJmZXRjaCIsIm1ldGhvZCIsInRoZW4iLCJyZXNwb25zZSIsIm9rIiwianNvbiIsIkVycm9yIiwiaSIsImxlbmd0aCIsInB1c2giLCJuYW1lIiwid2F0Y2giLCJ2YWwiLCJtZXRob2RzIiwiYWRkUGhvdG8iLCJmaWxlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZmlsZXMiLCJpbnB1dCIsImZpcnN0SW5wdXQiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnQiLCJpbWciLCJJbWFnZSIsInNyYyIsIndpbmRvdyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInRlc3QiLCJ0eXBlIiwib25sb2FkIiwid2lkdGgiLCJuYXR1cmFsV2lkdGgiLCJoZWlnaHQiLCJuYXR1cmFsSGVpZ2h0Iiwic2l6ZSIsInNldEF0dHJpYnV0ZSIsInN0eWxlIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Ub3AiLCJyZW1vdmVBdHRyaWJ1dGUiLCJvbkNsb3NlIiwiZSIsImluZGV4IiwiaW5kZXhPZiIsInRhcmdldCIsImlkIiwibGFzdElucHV0Iiwic3BsaWNlIiwib25TdWJtaXQiLCJyZXF1aXJlZCIsImZvckVhY2giLCJpdGVtIiwidmFsdWUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJwcmV2ZW50RGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBTyxJQUFJQyxJQUFJLENBQ2ZDLEdBQUksUUFDSkMsS0FBTSxDQUNGQyxRQUFTLEVBQ1RDLFlBQWEsR0FDYkMsUUFB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LE9BQVEsSUFMcEJBLEVBQU1pRSxVQUFVRSxJQUFJLHVCQUNwQjFELEtBQUtQLE9BQU9GLE9BQVEsRUFDcEJxRCxFQUFFZSxrQkFNRjNELEtBQUtWLFFBQVVBLEVBQU1pRSxPQUNyQmpFLEVBQU1rRSxVQUFVRSxJQUFJLHVCQUNwQjFELEtBQUtQLE9BQU9ILE9BQVEsRUFDcEJzRCxFQUFFZSxtQkFDSzNELEtBQUtWLE9BQVNBLEVBQU1pRSxPQUMzQmpFLEVBQU1rRSxVQUFVQyxPQUFPLHVCQUN2QnpELEtBQUtQLE9BQU9ILE9BQVEiLCJmaWxlIjoiY29udGFjdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29udCA9IG5ldyBWdWUoe1xyXG4gICAgZWw6ICcjY29udCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgY291bnRlcjogMCxcclxuICAgICAgICB0ZXh0YXJlYVZhbDogJycsXHJcbiAgICAgICAgb3B0aW9uczogW10sXHJcbiAgICAgICAgc2VsZWN0ZWQ6ICcnLFxyXG4gICAgICAgIGltZ3M6IFtdLFxyXG4gICAgICAgIG90aGVyOiBmYWxzZSxcclxuICAgICAgICBlbWFpbDogJycsXHJcbiAgICAgICAgcGhvdG9JbnZhbGlkOiBmYWxzZSxcclxuICAgICAgICBlcnJvcnM6IHtcclxuICAgICAgICAgICAgZW5xdWlyeV90eXBlOiBmYWxzZSxcclxuICAgICAgICAgICAgdXNlcl9uYW1lOiBmYWxzZSwgXHJcbiAgICAgICAgICAgIGVtYWlsOiBmYWxzZSwgXHJcbiAgICAgICAgICAgIHN1YmplY3Q6IGZhbHNlLCBcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGZhbHNlLFxyXG4gICAgICAgICAgICBvdGhlcjogZmFsc2V9XHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgICAgICBmZXRjaCgnaHR0cDovLzUwNDA4MC5jb20vYXBpL3YxL2RpcmVjdG9yaWVzL2VucXVpcnktdHlwZXMnLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ2dldCdcclxuICAgICAgICB9KS5cclxuICAgICAgICB0aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgIH0gXHJcblxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xyXG4gICAgICAgIH0pLlxyXG4gICAgICAgIHRoZW4oZnVuY3Rpb24gKGpzb24pIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc29uLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIF90aGlzLm9wdGlvbnMucHVzaChqc29uLmRhdGFbaV0ubmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgd2F0Y2g6IHtcclxuICAgICAgICBzZWxlY3RlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PSAnT3RoZXInKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm90aGVyID0gdHJ1ZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub3RoZXIgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGV4dGFyZWFWYWw6IGZ1bmN0aW9uKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZXIgPSB2YWwubGVuZ3RoO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGFkZFBob3RvOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dFt0eXBlPWZpbGVdJylbY29udC5pbWdzLmxlbmd0aF0uZmlsZXNbMF07XHJcbiAgICAgICAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9ZmlsZV0nKVtjb250LmltZ3MubGVuZ3RoXTtcclxuICAgICAgICAgICAgdmFyIGZpcnN0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY19mb3JtX2hpZGRlbkFkZCcpO1xyXG4gICAgICAgICAgICB2YXIgdGV4dENvbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY19mb3JtX3RleHRfY29udCcpO1xyXG4gICAgICAgICAgICB2YXIgcmVnViA9IC9pbWFnZVxcLy9naTtcclxuICAgICAgICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpO1xyXG5cclxuICAgICAgICAgICAgaW1nLnNyYyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpOyAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAocmVnVi50ZXN0KGZpbGUudHlwZSkpIHtcclxuICAgICAgICAgICAgICAgIGltZy5vbmxvYWQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSBpbWcubmF0dXJhbFdpZHRoLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQgPSBpbWcubmF0dXJhbEhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWxlLnNpemUgPCA1MjQyODgwICYmIHdpZHRoID49IDMwMCAmJiBoZWlnaHQgPj0gMzAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250LmltZ3MucHVzaChpbWcuc3JjKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgncmVhZG9ubHknLCAnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dC5zdHlsZS53aWR0aCA9ICcwJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnN0eWxlLmhlaWdodCA9ICcwJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0SW5wdXQuc3R5bGUubWFyZ2luUmlnaHQgPSAnMHB4JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRDb250LnN0eWxlLm1hcmdpblRvcCA9ICctMTcwcHgnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udC5waG90b0ludmFsaWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnQucGhvdG9JbnZhbGlkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnJlbW92ZUF0dHJpYnV0ZSgncmVhZG9ubHknKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSAgICBcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnQucGhvdG9JbnZhbGlkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG9uQ2xvc2U6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5pbWdzLmluZGV4T2YoZS50YXJnZXQuaWQpO1xyXG4gICAgICAgICAgICB2YXIgbGFzdElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1maWxlXScpW2NvbnQuaW1ncy5sZW5ndGggLSAxXTtcclxuICAgICAgICAgICAgdmFyIHRleHRDb250ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNfZm9ybV90ZXh0X2NvbnQnKTtcclxuICAgICAgICAgICAgdmFyIGZpcnN0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY19mb3JtX2hpZGRlbkFkZCcpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5pbWdzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIGxhc3RJbnB1dC5zdHlsZS53aWR0aCA9ICcxMzBweCc7XHJcbiAgICAgICAgICAgIGxhc3RJbnB1dC5zdHlsZS5oZWlnaHQgPSAnMTcwcHgnO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuaW1ncyA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0Q29udC5zdHlsZS5tYXJnaW5Ub3AgPSAnMHB4JztcclxuICAgICAgICAgICAgICAgIGZpcnN0SW5wdXQuc3R5bGUubWFyZ2luUmlnaHQgPSAnLTEzMHB4JztcclxuICAgICAgICAgICAgICAgIGZpcnN0SW5wdXQuc3R5bGUuaGVpZ2h0ID0gJzE3MHB4JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG9uU3VibWl0OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHZhciByZWdFbWFpbCA9IC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfV0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvO1xyXG4gICAgICAgICAgICB2YXIgcmVxdWlyZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jaGVjaz1yZXF1aXJlZF0nKTtcclxuICAgICAgICAgICAgdmFyIGVtYWlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1lbWFpbF0nKTtcclxuICAgICAgICAgICAgdmFyIG90aGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1vdGhlcl0nKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcXVpcmVkLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW0udmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ2NfZm9ybV9lcnJvcl9ib3JkZXInKTtcclxuICAgICAgICAgICAgICAgICAgICBjb250LmVycm9yc1tpdGVtLm5hbWVdID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnY19mb3JtX2Vycm9yX2JvcmRlcicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnQuZXJyb3JzW2l0ZW0ubmFtZV0gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXJlZ0VtYWlsLnRlc3QodGhpcy5lbWFpbCkpIHtcclxuICAgICAgICAgICAgICAgIGVtYWlsLmNsYXNzTGlzdC5hZGQoJ2NfZm9ybV9lcnJvcl9ib3JkZXInKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzLmVtYWlsID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVtYWlsLmNsYXNzTGlzdC5yZW1vdmUoJ2NfZm9ybV9lcnJvcl9ib3JkZXInKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzLmVtYWlsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm90aGVyICYmICFvdGhlci52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgb3RoZXIuY2xhc3NMaXN0LmFkZCgnY19mb3JtX2Vycm9yX2JvcmRlcicpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lcnJvcnMub3RoZXIgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3RoZXIgJiYgb3RoZXIudmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIG90aGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2NfZm9ybV9lcnJvcl9ib3JkZXInKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzLm90aGVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9ycy5vdGhlciA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KTsiXX0=
